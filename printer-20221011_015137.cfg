[include mainsail.cfg]
[include fluidd.cfg]
[include ebb.cfg]
[include bltouch.cfg]
[include retraction.cfg]
# This file contains common pin mappings for the BigTreeTech SKR 2. To use this config, the firmware should be compiled for the STM32F407 with a "32KiB bootloader".


# In newer versions of this board shipped in late 2021 the STM32F429
# is used, if this is the case compile for this with a "32KiB bootloader"
# You will need to check the chip on your board to identify which you have.
#
# The "make flash" command does not work on the SKR 2. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR 2
# with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Note: The initial revision of this board has a flaw that can cause
# damage to itself and other boards. Be sure to verify the board is
# not impacted by this flaw before using it.

[stepper_x]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE3
microsteps: 64
rotation_distance: 40
endstop_pin: !EBBCan: PB7
position_endstop: 0
position_max: 220
homing_speed: 30


[tmc2208 stepper_x]
uart_pin: PE0
run_current: 0.900
stealthchop_threshold: 999999
	
[stepper_y]
step_pin: PD5
dir_pin: !PD4
enable_pin: !PD6
microsteps: 64
rotation_distance: 40
endstop_pin: !EBBCan: PB5
position_endstop: 0
position_max: 220
homing_speed: 30


[tmc2209 stepper_y]
uart_pin: PD3
run_current: 0.900
stealthchop_threshold: 999999

[stepper_z]
step_pin: PA15
dir_pin: !PA8
enable_pin: !PD1
microsteps: 16
rotation_distance: 8
full_steps_per_rotation: 800
#endstop_pin: ^PC0
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0.5
position_max: 220
position_min: -2
homing_speed: 5


[tmc2209 stepper_z]
uart_pin: PD0
run_current: 0.900
diag_pin:
stealthchop_threshold: 999999


#[extruder]
#step_pin: PD15
#dir_pin: !PD14
#enable_pin: !PC7
#microsteps: 16
#rotation_distance: 7.87149779844046
#full_steps_per_rotation: 200
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: PB3
#sensor_type: EPCOS 100K B57560G104F
#sensor_pin: PA2
##control: pid
##pid_Kp: 22.2
##pid_Ki: 1.08
##pid_Kd: 114
#min_temp: 0
#max_temp: 250
#pressure_advance: 0.150

#[tmc2209 extruder]
#uart_pin: PC6
#stealthchop_threshold: 999999
#run_current: 0.800

[heater_bed]
heater_pin: PD7
sensor_type: Generic 3950
sensor_pin: PA1
#control: watermark
min_temp: 0
max_temp: 130


#[fan]
#pin:  EBBCan: PA1
#kick_start_time: 0.100


#[heater_fan fan_heater]
#pin:  EBBCan: PA2
#fan_speed: 0.60
#heater: extruder
#heater_temp: 50.0

[verify_heater heater_bed]
check_gain_time: 90



#[heater_fan fan2]
#pin: PB5

# Due to BTT implementing a Marlin-specific safety feature,
# "anti-reversal stepper protection", this pin needs pulling
# high to pass power to stepper drivers and most FETs

[output_pin motor_power]
pin: PC13
value: 1

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_2C002E000251303330363837-if00
restart_method: command


[printer]
#kinematics: cartesian
kinematics: corexy
#max_velocity: 300
#max_accel: 3000
#max_z_velocity: 5
#max_z_accel: 100

max_velocity: 300 
max_accel: 5200
max_z_velocity: 10
max_z_accel: 50
max_accel_to_decel: 1650
square_corner_velocity: 5

#[input_shaper]
#shaper_freq_x: 93.85  # frequency for the X mark of the test model
#shaper_freq_y: 82.51  # frequency for the Y mark of the test model




########################################
# EXP1 / EXP2 (display) pins
########################################


[board_pins]
aliases:
#    # EXP1 header
    EXP1_1=PC5, EXP1_3=PB1, EXP1_5=PE10, EXP1_7=PE12, EXP1_9=<GND>,
    EXP1_2=PB0, EXP1_4=PE9, EXP1_6=PE11, EXP1_8=PE13, EXP1_10=<5V>,
#    # EXP2 header
    EXP2_1=PA6, EXP2_3=PE7, EXP2_5=PB2, EXP2_7=PC4,   EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4, EXP2_6=PA7, EXP2_8=<RST>, EXP2_10=<NC>

# See the sample-lcd.cfg file for definitions of common LCD displays.

[display]
lcd_type: uc1701 
cs_pin: EXP1_3
a0_pin: EXP1_4 
rst_pin: EXP1_5 
contrast: 63 
encoder_pins: ^EXP2_5, ^EXP2_3 
click_pin: ^!EXP1_2 
spi_bus: spi1

#[display]
#lcd_type: uc1701
#cs_pin: EXP1_3
#a0_pin: EXP1_4
#rst_pin: EXP1_5
#contrast: 32
#encoder_pins: ^EXP2_5, ^EXP2_3
#click_pin: ^!EXP1_2
## Some micro-controller boards may require an spi bus to be specified:
#spi_bus: spi
## Alternatively, some micro-controller boards may work with software spi:
#spi_software_miso_pin: EXP2_1
#spi_software_mosi_pin: EXP2_6
#spi_software_sclk_pin: EXP2_2

[display_status]

[display_data my_group_name my_data_name]
position:
	1,1
text: text

[output_pin beeper]
pin: EXP1_1

[neopixel fysetc_mini12864]
pin: EXP1_6
chain_count: 3
color_order: RGB
initial_RED: 1.0
initial_GREEN: 0.6
initial_BLUE: 0.5
#GREEN=0.6 RED=1 BLUE=0.5

[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0.6 BLUE=0.5 INDEX=3 





#pin_up_touch_mode_reports_triggered: true

#[probe]
#samples_tolerance: .1		#how much of a difference there can be before it triggers a retest, there is a default if you don't specify
#samples_tolerance_retries: 3	#how many times you want it to retry before failing.





[force_move]
enable_force_move: true



[gcode_macro M280]
gcode:
  {% if params.S == '90' %}
	BLTOUCH_DEBUG COMMAND=pin_up
  {% endif %}
  {% if params.S == '10' %}
	BLTOUCH_DEBUG COMMAND=pin_down
  {% endif %}
  {% if params.S == '120' %}
	BLTOUCH_DEBUG COMMAND=self_test
  {% endif %}
  {% if params.S == '160' %}
	BLTOUCH_DEBUG COMMAND=reset
  {% endif %}


#[gcode_macro M117]
#gcode:
#        G0

#[gcode_macro M73]
#gcode:
#        G0

[gcode_macro G29]
gcode:
 G28
 BED_MESH_CALIBRATE
 BED_MESH_PROFILE SAVE=p1
 G1 X110 Y110 Z10 F4000

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 1.535
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 66.805
#*# pid_ki = 1.310
#*# pid_kd = 851.769
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.196250, -0.308125, -0.291875, -0.082500
#*# 	-0.161875, -0.265625, -0.271250, -0.081250
#*# 	-0.066875, -0.145625, -0.143125, 0.058750
#*# 	0.189375, -0.040625, 0.067500, 0.266875
#*# x_count = 4
#*# y_count = 4
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 10.0
#*# max_x = 169.99
#*# min_y = 10.0
#*# max_y = 209.98
